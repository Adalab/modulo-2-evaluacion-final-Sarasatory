{"version":3,"sources":["1-main.js","9-pruebas.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\n//\n// ELEMENTOS DEL HTML.\n//\n// Input de búsqueda\nconst inputSearch = document.querySelector('.js_input_search');\n\n// Botones \"Buscar\" y \"Reset\".\nconst btnSearch = document.querySelector('.js_btn_search');\nconst btnReset = document.querySelector('.js_btn_reset');\n\n// Listados de HTML donde se pintan las listas de cócteles \"Buscados\" y \"Favoritos\".\nconst listSearchCKT = document.querySelector('.js_list_search_CKT');\nconst listFavoritesCKT = document.querySelector('.js_list_favorites_CKT');\n\n//\n// CONSTANTES Y VARIABLES.\n//\n\nconst searchURL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst nonAlcoholicURL =\n  'https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=Non_Alcoholic';\nconst margaritaURL =\n  'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=margarita';\nconst mojitoURL =\n  'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=mojito';\nconst ginURL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=gin';\nconst randonURL = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\nlet callApiUrl = '';\n\n// Número de elementos \"randon\" que aparecen al pintar la primera vez.\nlet randonIni = 1;\n\n// Arrays con las listas de cócteles \"Buscados\" y \"Favoritos\".\nlet cocktails = [];\nlet cocktailsFavorites = [];\n\n// Creo un conmutador para decidir en qué lista hay que pintar.\n// swt = 0 --> Buscados.\n// swt = 1 --> Favoritos.\nlet swt = 0;\n\n//\n// FUNCIONES.\n//\n\n//\n// Añade la lista de favoritos a localStorage.\n//\nfunction setLocalStorage() {\n  // Convierto a \"string\" el array de objetos de con los cócteles favoritos.\n  const locStoCocktailsFavorites = JSON.stringify(cocktailsFavorites);\n\n  // Lo guardo en localStorage.\n  localStorage.setItem('localFavoritesList', locStoCocktailsFavorites);\n}\n\n//\n// Obtiene la lista de favoritos de localStorage y la comprueba.\n//\nfunction getLocalStorage() {\n  console.log('Entro en gelLocalStorage');\n  // 1.- Meto en una variable lo que hay en localStorage.\n  let localFavoritesList = '';\n  const locStoCocktailsFavorites = localStorage.getItem('localFavoritesList');\n  console.log('Llego a locStoCocktailsFavorites');\n  // console.log('Valor de locStoCocktailsFavorites: ', locStoCocktailsFavorites);\n\n  // 2.- Compruebo si había datos guardados.\n  // Si no los había, la información devuelta por \"localStorage.getItem()\" será \"null\".\n  if (locStoCocktailsFavorites !== null && locStoCocktailsFavorites !== []) {\n    console.log('Entra en !== null');\n    // Si el valor devuelto no es \"null\", pinto las tarjetas de cócteles favoritos.\n    // Parseo la información recogida de localStorage y la guardo en una constante.\n    // Asigno esa constante a la variable \"cocktailsFavorites\".\n    // Llamo a la función que pinta la información y le paso la variable \"cocktailsFavorites\" como parámetro.\n    const parseLocStoCocFav = JSON.parse(locStoCocktailsFavorites);\n    cocktailsFavorites = parseLocStoCocFav;\n    paintFun(cocktailsFavorites, 1);\n  }\n}\n\n//\n// Añade o elimina elementos de la lista de favoritos.\n//\nfunction addRemoveFavorites(event) {\n  console.log('Entra en addRemoveFavorites');\n\n  // Identifico qué elemento de favoritos ha sido clickado mediante su \"id\".\n  const cardClickedId = event.currentTarget.id;\n  console.log('ID: ', cardClickedId);\n  console.log('ID WWWWWWWWWWWWW--->: ', cardClickedId);\n\n  // Creo una constante donde almacenar el objeto que me devolverá \".find\".\n  // Busco ese objeto en el array de elementos buscados, mediante su \"id\".\n  // Hago esto para poderlo añadir en caso de que no esté en la lista de favoritos ya.\n\n  // En caso de que el objeto no esté en la lista de favoritos, hay que meterlo, y en caso contrario, sacarlo.\n  // Para eso, primero hay que comprobar si está.\n  // Después, cogerlo en una variable\n\n  const cocktailClicked = cocktails.find((element) => {\n    return element.idDrink === cardClickedId;\n  });\n  // Ya tengo guardado en \"cocktailClicked\" el objeto (cóctel) sobre el que he pinchado (en su corazón de favorio).\n  console.log('Objeto (cóctel) clickado: ', cocktailClicked);\n\n  // Compruebo si el objeto está ya en el array de \"favoritos\".\n  const itsFavoriteCkt = cocktailsFavorites.findIndex((elementFav) => {\n    return elementFav.idDrink === cardClickedId;\n  });\n  // Ya tengo guardado en \"itsFavoriteCkt\" el índice del objeto (cóctel) que se corresponde con el que hemos pinchado.\n  // Esto sirve para poderlo borrar en caso de que ya esté en el array de \"favoritos\".\n  console.log('Indice del elemento clickado: ', itsFavoriteCkt);\n\n  // Averiguo si el objeto clickado ya estaba en favoritos.\n  // En caso negativo, lo añado con \".push\" (if).\n  // En caso afirmativo, lo elimino con \".splice\" (else).\n  if (itsFavoriteCkt === -1) {\n    console.log('No estaba, ¡LO PONGO!');\n    cocktailsFavorites.push(cocktailClicked);\n  } else {\n    console.log('Estaba, ¡LO QUITO!');\n    cocktailsFavorites.splice(itsFavoriteCkt, 1);\n  }\n\n  setLocalStorage();\n\n  paintFun(cocktailsFavorites, 1);\n  paintFun(cocktails, 0);\n  console.log(cocktailsFavorites);\n}\n\n//\n// Escucha la lista de iconos de favorito de los cóctles (Los corazoncitos).\n//\nfunction listenCocktails() {\n  console.log('Entra en listenCocktails');\n  // Escucho todos los iconos de corazón de las tarjetas pintadas.\n  const listHearts = document.querySelectorAll('.js_icon_favorite');\n\n  for (const heartElement of listHearts) {\n    heartElement.addEventListener('click', addRemoveFavorites);\n  }\n}\n\n//\n// Genera la URL para las búsquedas predefindas.\n//\nfunction ApiUrlGenerator(event) {\n  console.log('Entra en ApiUrlGenerator');\n\n  // Identifico qué elemento de los \"li\" ha sido clickado mediante su \"id\".\n  const liClickedId = event.currentTarget.id;\n  console.log('ID: ', liClickedId);\n\n  if (liClickedId === 'nonAlc') {\n    callApiUrl = nonAlcoholicURL;\n  }\n  if (liClickedId === 'mar') {\n    callApiUrl = margaritaURL;\n  }\n  if (liClickedId === 'moj') {\n    callApiUrl = mojitoURL;\n  }\n  if (liClickedId === 'gin') {\n    callApiUrl = ginURL;\n  }\n  if (liClickedId === 'ran') {\n    callApiUrl = randonURL;\n  }\n  callApi(callApiUrl);\n}\n\n//\n// Escucha la lista de \"li\" con búsquedas predefinidas.\n//\nfunction listenPredefinedList() {\n  console.log('Entra en listenPredefinedList');\n  // Escucho todos los \"li\" de búsquedas predefinidas.\n  const listPredefined = document.querySelectorAll('.js_header_link');\n  console.log('listPredefined: ', listPredefined);\n\n  for (const liElement of listPredefined) {\n    liElement.addEventListener('click', ApiUrlGenerator);\n  }\n}\n\n//\n// Pintar en pantalla.\n//\nfunction paintFun(ckt, swt) {\n  console.log('MIERDA DE CKT', ckt);\n\n  // ckt --> Array con los objetos a pintar.\n  // swt --> Conmutador que indica en qué lista se pinta:\n  // swt = 0 --> Buscados.\n  // swt = 1 --> Favoritos.\n  console.log('Entra en paintFun');\n  // console.log(ckt.length);\n  console.log(ckt);\n\n  let htmlToPaint = '';\n\n  for (let i = 0; i < ckt.length; i++) {\n    const dataStr = 'ckt';\n    const drink = ckt[i];\n    // console.log('-->', ckt[i]);\n\n    // Añado al \"li\" y al \"i\" el \"id\" del elemento (cóctel) del array, para poderlo identifcar y usar para su búsqueda posterior, y así comprobar si está en favoritos o no.\n    // (id=\"${ckt[i].idDrink}\").\n\n    // Compruebo si el objeto está ya en el array de \"favoritos\".\n    const itsFavoriteCkt = cocktailsFavorites.findIndex((elementFav) => {\n      return elementFav.idDrink === ckt[i].idDrink;\n    });\n\n    let addFavoriteClass = '';\n    let heartStyle = 'fa-regular';\n\n    if (itsFavoriteCkt !== -1) {\n      addFavoriteClass = 'favorite';\n      heartStyle = 'fa-solid';\n    }\n\n    const imgDrink = ckt[i].strDrinkThumb;\n    if (ckt[i].strDrinkThumb === '') {\n      const imgDrink = '../assets/images/grog001.jpg';\n    }\n\n    htmlToPaint += `\n      <li class=\"cocktailCard js_cocktail_card ${addFavoriteClass}\" id=\"${ckt[i].idDrink}\">\n         <i class=\"cocktailCard__icon-favourite js_icon_favorite ${heartStyle} fa-heart\" id=\"${ckt[i].idDrink}\"></i>\n           <h3 class=\"cocktailCard__title\">${ckt[i].strDrink}</h3>\n           <img\n             src=\"${imgDrink}\"\n             alt=\"${ckt[i].strDrink}\"\n             class=\"cocktailCard__img\"\n           />\n           <p class=\"cocktailCard__alcoholic\">${ckt[i].strAlcoholic}</p>\n\n           <p class=\"cocktailCard__ingredients\">Ingredientes:</p>\n\n           <ol class=\"cocktailCard__list-ingredients\">`;\n\n    // Pinto los ingredientes de cada cóctel.\n    for (let index = 1; index < 16; index++) {\n      const ingredient = 'strIngredient'.concat(index);\n      // Compruebo que el valor devuelto por el ingrediente no sea \"null\" ni vacio.\n      if (\n        drink[ingredient] !== null &&\n        drink[ingredient] !== '' &&\n        drink[ingredient] !== undefined\n      ) {\n        // console.log('DRINK INGREDIENT: ', drink[ingredient]);\n        htmlToPaint += `<li class=\"cocktailCard__list-ingredients__li\">${drink[ingredient]}</li>`;\n      }\n    }\n    htmlToPaint += `</ol></li>`;\n  }\n\n  if (swt === 0) {\n    console.log('Entra en pintar cocktails buscados');\n    listSearchCKT.innerHTML = 'Buscados';\n    listSearchCKT.innerHTML += htmlToPaint;\n  } else {\n    console.log('Entra en pintar cocktails favorites');\n    listFavoritesCKT.innerHTML = 'Favoritos';\n    listFavoritesCKT.innerHTML += htmlToPaint;\n  }\n\n  // Después de pintar, escucho de nuevo las listas.\n  listenCocktails();\n}\n\n//\n// Llama a la API y recoge los datos devueltos por la misma.\n//\nfunction callApi(callApiUrl) {\n  // Hago la llamada a la API:\n  fetch(callApiUrl)\n    .then((response) => response.json())\n    .then((data) => {\n      cocktails = data.drinks;\n\n      // Llamo a la función que pinta las tarjetas.\n      paintFun(cocktails, 0);\n    });\n}\n\n//\n//\n//\nfunction getRandonCocktails() {\n  console.log('Entra en getRandonCocktails');\n\n  for (let i = 0; i < 2; i++) {\n    // Hago la llamada a la API:\n    fetch(randonURL)\n      .then((response) => response.json())\n      .then((data) => {\n        // Hay queponer el índice cero [0] siempre, porque la URL de randon solo devuelve un valor, el de la posición cero [0].\n        cocktails.push(data.drinks[0]);\n\n        // Llamo a la función que pinta las tarjetas.\n        paintFun(cocktails, 0);\n        console.log('data.drinks[0] MMMM--->', data.drinks[0]);\n      });\n  }\n}\n\n//\n// Funciones manejadoras:\n//\n\n//\n// Crea la URL de búsqueda para la llamada a la API, con el valor del input.\n//\nfunction handleClickSearch(event) {\n  console.log('Entra en handleClickSearch');\n  event.preventDefault();\n\n  // Creo una variable y en ella meto el valor del input de búsqueda.\n  let inputSearchValue = '';\n  inputSearchValue = inputSearch.value;\n\n  callApiUrl = searchURL + inputSearchValue;\n\n  // Si quiero meter otra URL tiene que llegar aquí ;)\n  // callApi('https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=Alcoholic');\n  callApi(callApiUrl);\n}\n\n//\n// Resetea la búsqueda.\n// Borra las listas de cócteles.\n// Borra la lista de favoritos de localStorage.\n// Pinta de nuevo.\n//\nfunction handleClickReset() {\n  cocktails = [];\n  cocktailsFavorites = [];\n\n  setLocalStorage();\n  paintFun(cocktails, 0);\n  paintFun(cocktailsFavorites, 1);\n  getRandonCocktails();\n}\n\n//\n// EVENTOS.\n//\nbtnSearch.addEventListener('click', handleClickSearch);\nbtnReset.addEventListener('click', handleClickReset);\n\n//\n// AL CARGAR LA PÁGINA:\n//\ngetLocalStorage();\ngetRandonCocktails();\nlistenPredefinedList();\n","//\n// No sé cómo llamar con un bucle a \"data.drinks[2].strIngredientX\", donde X es un número variable e incremental entre el 1 y el 15.\n//\n// let index = 2;\n// let varPrueba = `.strIngredient${index}`;\n\n// for (let index = 1; index < 4; index++) {\n//   console.log(data.drinks[2].strIngredient + '' + index);\n//   console.log(data.drinks[2]);\n\n// listSearchCKT.innerHTML += data.drinks[2].strIngredient + index;\n// }\n//\n//\n//\n"]}