{"version":3,"sources":["1-main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\n//\n// ELEMENTOS DEL HTML.\n//\n// Input de búsqueda\nconst inputSearch = document.querySelector('.js_input_search');\n\n// Botones \"Buscar\" y \"Reset\".\nconst btnSearch = document.querySelector('.js_btn_search');\nconst btnReset = document.querySelector('.js_btn_reset');\n\n// Listados de HTML donde se pintan las listas de cócteles \"Buscados\" y \"Favoritos\".\nconst listSearchCKT = document.querySelector('.js_list_search_CKT');\nconst listFavoritesCKT = document.querySelector('.js_list_favorites_CKT');\nconst listDrinkedCKT = document.querySelector('.js_list_drinked_CKT');\n\n//\n// CONSTANTES Y VARIABLES.\n//\n\n// URLS.\nconst searchURL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst nonAlcoholicURL =\n  'https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=Non_Alcoholic';\nconst margaritaURL =\n  'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=margarita';\nconst mojitoURL =\n  'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=mojito';\nconst ginURL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=gin';\nconst randonURL = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n\n// Generador de URL.\nlet callApiUrl = '';\n\n// Número de elementos \"randon\" que aparecen al pintar la primera vez.\nlet randonIni = 6;\n\n// Arrays con las listas de cócteles \"Buscados\" y \"Favoritos\".\nlet cocktails = [];\nlet cocktailsFavorites = [];\nlet cocktailsDrinked = [];\n\n// Creo un conmutador para decidir en qué lista hay que pintar.\n// swt = 0 --> Buscados.\n// swt = 1 --> Favoritos.\n// swt = 2 --> Bebidos.\nlet swt = 0;\n\n//\n// FUNCIONES.\n//\n\n//\n// Añade la lista de favoritos a localStorage.\n//\nfunction setLocalStorage() {\n  console.log('Entra en setLocalStorage');\n  // Convierto a \"string\" el array de objetos de con los cócteles favoritos.\n  const locStoCocktailsFavorites = JSON.stringify(cocktailsFavorites);\n  const locStoCocktailsDrinked = JSON.stringify(cocktailsDrinked);\n\n  localStorage.setItem('localFavoritesList', locStoCocktailsFavorites);\n  // if (locStoCocktailsFavorites === '[null') {\n  //   locStoCocktailsFavorites = '';\n  // } else {\n  //   // Lo guardo en localStorage.\n  //   localStorage.setItem('localFavoritesList', locStoCocktailsFavorites);\n  // }\n\n  localStorage.setItem('localDrinkedList', locStoCocktailsDrinked);\n  // if (locStoCocktailsDrinked === '[null') {\n  //   locStoCocktailsDrinked = '';\n  // } else {\n  //   // Lo guardo en localStorage.\n  //   localStorage.setItem('localDrinkedList', locStoCocktailsDrinked);\n  // }\n}\n\n//\n// Obtiene la lista de favoritos de localStorage y la comprueba.\n//\nfunction getLocalStorage() {\n  console.log('Entra en gelLocalStorage');\n\n  // Variables del localStorage (así se llaman en la memoria del navegador).\n\n  // 1.- Meto en una variable lo que hay en localStorage.\n  let locStoCocktailsFavorites = localStorage.getItem('localFavoritesList');\n  let locStoCocktailsDrinked = localStorage.getItem('localDrinkedList');\n\n  // if (locStoCocktailsFavorites !== null && locStoCocktailsFavorites !== []) {\n  //   console.log('Entra en !== null - Favorites');\n\n  //   const parseLocStoCocFav = JSON.parse(locStoCocktailsFavorites);\n  //   cocktailsFavorites = parseLocStoCocFav;\n  //   paintFun(cocktailsFavorites, 1);\n  // }\n\n  // if (locStoCocktailsDrinked !== null && locStoCocktailsDrinked !== []) {\n  //   console.log('Entra en !== null - Drinked');\n\n  //   const parseLocStoCocDri = JSON.parse(locStoCocktailsDrinked);\n  //   cocktailsDrinked = parseLocStoCocDri;\n  //   paintFun(cocktailsDrinked, 2);\n  // }\n\n  if (\n    locStoCocktailsFavorites === '[null]' ||\n    locStoCocktailsFavorites === [null] ||\n    locStoCocktailsFavorites === 'null' ||\n    locStoCocktailsFavorites === null ||\n    locStoCocktailsFavorites === [] ||\n    locStoCocktailsFavorites === '[]'\n  ) {\n    // console.log('NULO - FAVORITES 1', locStoCocktailsFavorites);\n    locStoCocktailsFavorites = [];\n    // console.log('NULO - FAVORITES 2', locStoCocktailsFavorites);\n  } else {\n    // console.log('DISTINTO DE NULO - FAVORITES', locStoCocktailsFavorites);\n\n    const parseLocStoCocFav = JSON.parse(locStoCocktailsFavorites);\n    cocktailsFavorites = parseLocStoCocFav;\n    paintFun(cocktailsFavorites, 1);\n  }\n\n  if (\n    locStoCocktailsDrinked === '[null]' ||\n    locStoCocktailsDrinked === [null] ||\n    locStoCocktailsDrinked === 'null' ||\n    locStoCocktailsDrinked === null ||\n    locStoCocktailsDrinked === [] ||\n    locStoCocktailsDrinked === '[]'\n  ) {\n    // console.log('NULO - DRINKED 1', locStoCocktailsDrinked);\n    locStoCocktailsDrinked = [];\n    // console.log('NULO - DRINKED 2', locStoCocktailsDrinked);\n  } else {\n    // console.log('DISTINTO DE NULO - DRINKED', locStoCocktailsDrinked);\n\n    const parseLocStoCocDri = JSON.parse(locStoCocktailsDrinked);\n    cocktailsDrinked = parseLocStoCocDri;\n    paintFun(cocktailsDrinked, 2);\n  }\n}\n\n//\n// Añade o elimina elementos de la lista de favoritos.\n//\nfunction addRemoveFavorites(event) {\n  console.log('Entra en addRemoveFavorites');\n\n  // Identifico qué elemento de favoritos ha sido clickado mediante su \"id\".\n  const cardClickedId = event.currentTarget.id;\n\n  const cocktailClicked = cocktails.find((element) => {\n    return element.idDrink === cardClickedId;\n  });\n\n  // Compruebo si el objeto está ya en el array de \"favoritos\".\n  const itsFavoriteCkt = cocktailsFavorites.findIndex((elementFav) => {\n    return elementFav.idDrink === cardClickedId;\n  });\n\n  // Ya tengo guardado en \"itsFavoriteCkt\" el índice del objeto (cóctel) que se corresponde con el que hemos pinchado.\n  // Esto sirve para poderlo borrar en caso de que ya esté en el array de \"favoritos\".\n\n  // Averiguo si el objeto clickado ya estaba en favoritos.\n  // En caso negativo, lo añado con \".push\" (if).\n  // En caso afirmativo, lo elimino con \".splice\" (else).\n  if (itsFavoriteCkt === -1) {\n    // console.log('No estaba, ¡LO PONGO!');\n    cocktailsFavorites.push(cocktailClicked);\n    // console.log('PUSH: ', cocktailClicked);\n    // console.log('Cocktails Favorites: ', cocktailsFavorites);\n  } else {\n    // console.log('Estaba, ¡LO QUITO!');\n    cocktailsFavorites.splice(itsFavoriteCkt, 1);\n  }\n\n  setLocalStorage();\n\n  paintFun(cocktails, 0);\n  paintFun(cocktailsFavorites, 1);\n  paintFun(cocktailsDrinked, 2);\n}\n\n//\n// Añade o elimina elementos de la lista de bebidos.\n//\nfunction addRemoveDrinked(event) {\n  console.log('Entra en addRemoveDrinked');\n\n  // Recojo el Id de la copita.\n  const cardClickedId = event.currentTarget.id;\n\n  // Recojo en una variable el elemento de \"buscados\" cuyo id coincide con el pinchado.\n  const cocktailClicked = cocktails.find((element) => {\n    return element.idDrink === cardClickedId;\n  });\n\n  // Compruebo si el elemento pinchado está ya en la lista de cócteles bebidos.\n  const itsDrinkedCkt = cocktailsDrinked.findIndex((elementDrink) => {\n    return elementDrink.idDrink === cardClickedId;\n  });\n  // console.log('¡AQUÍ!');\n  // console.log('¡AQUÍ!');\n  // console.log(itsDrinkedCkt);\n\n  if (itsDrinkedCkt === -1) {\n    cocktailsDrinked.push(cocktailClicked);\n  } else {\n    cocktailsDrinked.splice(itsDrinkedCkt, 1);\n  }\n\n  setLocalStorage();\n\n  paintFun(cocktails, 0);\n  paintFun(cocktailsFavorites, 1);\n  paintFun(cocktailsDrinked, 2);\n}\n\n//\n// Escucha la lista de iconos de favorito de los cóctles (Los corazoncitos).\n//\nfunction listenCocktails() {\n  console.log('Entra en listenCocktails');\n\n  // Escucho todos los iconos de corazón de las tarjetas pintadas.\n  const listHearts = document.querySelectorAll('.js_icon_favorite');\n\n  for (const heartElement of listHearts) {\n    heartElement.addEventListener('click', addRemoveFavorites);\n  }\n}\n\n//\n// Escucha la lista de iconos de cóctel de los cóctles (Las copitas).\n//\nfunction listenDrinked() {\n  console.log('Entra en listenDrinked');\n  // Escucho todos los iconos de copita de las tarjetas pintadas.\n  const listGlasses = document.querySelectorAll('.js_icon_glass');\n\n  for (const glassElement of listGlasses) {\n    glassElement.addEventListener('click', addRemoveDrinked);\n  }\n}\n\n//\n// Genera la URL para las búsquedas predefindas.\n//\nfunction ApiUrlGenerator(event) {\n  console.log('Entra en ApiUrlGenerator');\n\n  // Identifico qué elemento de los \"li\" ha sido clickado mediante su \"id\".\n  const liClickedId = event.currentTarget.id;\n  // console.log('ID: ', liClickedId);\n\n  if (liClickedId === 'nonAlc') {\n    callApiUrl = nonAlcoholicURL;\n  }\n  if (liClickedId === 'mar') {\n    callApiUrl = margaritaURL;\n  }\n  if (liClickedId === 'moj') {\n    callApiUrl = mojitoURL;\n  }\n  if (liClickedId === 'gin') {\n    callApiUrl = ginURL;\n  }\n  if (liClickedId === 'ran') {\n    callApiUrl = randonURL;\n  }\n  callApi(callApiUrl);\n}\n\n//\n// Escucha la lista de \"li\" con búsquedas predefinidas.\n//\nfunction listenPredefinedList() {\n  console.log('Entra en listenPredefinedList');\n  // Escucho todos los \"li\" de búsquedas predefinidas.\n  const listPredefined = document.querySelectorAll('.js_header_link');\n  // console.log('listPredefined: ', listPredefined);\n\n  for (const liElement of listPredefined) {\n    liElement.addEventListener('click', ApiUrlGenerator);\n  }\n}\n\n//\n// Pintar en pantalla.\n//\nfunction paintFun(ckt, swt) {\n  console.log('Entra en paintFun');\n  // ckt --> Array con los objetos a pintar.\n  // swt --> Conmutador que indica en qué lista se pinta:\n  // swt = 0 --> Buscados.\n  // swt = 1 --> Favoritos.\n  // swt = 2 --> Bebidos.\n  // swt = 3 --> Randon.\n\n  // Qué versión de las tarjetas pinta.\n  let way = '';\n  if (swt === 0 || swt === 3) {\n    way = 'seaRan';\n  } else {\n    way = 'favDri';\n  }\n\n  let htmlToPaint = '';\n\n  for (let i = 0; i < ckt.length; i++) {\n    // htmlToPaint = '';\n\n    const drink = ckt[i];\n\n    // Compruebo si el objeto está ya en el array de \"favoritos\".\n    const itsFavoriteCkt = cocktailsFavorites.findIndex((elementFav) => {\n      return elementFav.idDrink === ckt[i].idDrink;\n    });\n\n    // Compruebo si el objeto está ya en el array de \"bebidos\".\n    const itsDrinkedCkt = cocktailsDrinked.findIndex((elementDrink) => {\n      return elementDrink.idDrink === ckt[i].idDrink;\n    });\n\n    let addFavoriteClass = '';\n    let addDrinkedClass = '';\n    // let heartStyle = 'fa-regular';\n    // let glassStyle = 'fa-martini-glass-citrus';\n\n    if (itsFavoriteCkt !== -1) {\n      addFavoriteClass = 'favorite';\n      // heartStyle = 'fa-solid';\n    }\n\n    if (itsDrinkedCkt !== -1) {\n      addDrinkedClass = 'drinked';\n      // glassStyle = 'fa-martini-glass-empty';\n    }\n\n    // Imagen por defecto.\n    const imgDrink = ckt[i].strDrinkThumb;\n    if (ckt[i].strDrinkThumb === '') {\n      const imgDrink = '../assets/images/grog001.jpg';\n    }\n\n    //\n    // PUEDO HACER UN CONDICIONAL CON \"swt\" QUE AÑADA O QUITE CLASES A LA HORA DE PINTAR PARA DETERMINAR EL TIPO DE TARJETA Y SU APARIENCIA.\n    //\n    htmlToPaint += `<div class=\"constructor--${way}__card\" id=\"${ckt[i].idDrink}\">`;\n    htmlToPaint += `<div class=\"constructor--${way}__card__img\" style=\"background-image: url(${imgDrink})\">`;\n    htmlToPaint += `<div class=\"constructor--${way}__card__img__iconFav js_icon_favorite\" id=\"${ckt[i].idDrink}\">`;\n    htmlToPaint += `</div>`;\n    htmlToPaint += `<div class=\"constructor--${way}__card__img__iconDri js_icon_glass\" id=\"${ckt[i].idDrink}\">`;\n    htmlToPaint += `</div>`;\n    htmlToPaint += `</div>`;\n    htmlToPaint += `<h5 class=\"constructor--${way}__card__title title--h5\">${ckt[i].strDrink} - ${ckt[i].idDrink}</h5>`;\n\n    // Pinto los ingredientes de cada cóctel, pero solo si \"swt\" es \"0\" o \"3\" (Buscados o Aleatorios).\n\n    if (swt === 0 || swt === 3) {\n      htmlToPaint += ` <p class=\"constructor--${way}__card__ingredients-text\">Ingredientes:</p>`;\n      htmlToPaint += `<ul class=\"constructor--${way}__card__ingredients-ul\">`;\n\n      for (let index = 1; index < 16; index++) {\n        const ingredient = 'strIngredient'.concat(index);\n        // Compruebo que el valor devuelto por el ingrediente no sea \"null\" ni vacio.\n        if (\n          drink[ingredient] !== null &&\n          drink[ingredient] !== '' &&\n          drink[ingredient] !== undefined\n        ) {\n          // console.log('DRINK INGREDIENT: ', drink[ingredient]);\n          htmlToPaint += `<li class=\"constructor--${way}__card__ingredients-li\">${drink[ingredient]}</li>`;\n        }\n      }\n      htmlToPaint += `</ul>`;\n    }\n\n    htmlToPaint += `<div class=\"constructor--${way}__card__cont-label\">`;\n    htmlToPaint += `<p class=\"constructor--${way}__card__cont-label__label\">${ckt[i].strAlcoholic}</p>`;\n    htmlToPaint += `</div>`;\n    htmlToPaint += `</div>`;\n  }\n\n  if (swt === 0 || swt === 3) {\n    console.log('Entra en pintar cocktails buscados');\n    listSearchCKT.innerHTML = '';\n    listSearchCKT.innerHTML += htmlToPaint;\n  } else if (swt === 1) {\n    console.log('Entra en pintar cocktails favorites');\n    listFavoritesCKT.innerHTML = '';\n    listFavoritesCKT.innerHTML += htmlToPaint;\n  } else {\n    console.log('Entra en pintar cocktails bebidos');\n    listDrinkedCKT.innerHTML = '';\n    listDrinkedCKT.innerHTML += htmlToPaint;\n  }\n\n  // Después de pintar, escucho de nuevo las listas.\n  listenCocktails();\n  listenDrinked();\n}\n\n//\n// Llama a la API y recoge los datos devueltos por la misma.\n//\nfunction callApi(callApiUrl) {\n  console.log('Entra en callApiUrl');\n  // Hago la llamada a la API:\n  fetch(callApiUrl)\n    .then((response) => response.json())\n    .then((data) => {\n      cocktails = data.drinks;\n\n      // Llamo a la función que pinta las tarjetas.\n      paintFun(cocktails, 0);\n    });\n}\n\n//\n//\n//\nfunction getRandonCocktails() {\n  console.log('Entra en getRandonCocktails');\n\n  for (let i = 0; i < randonIni; i++) {\n    // Hago la llamada a la API:\n    fetch(randonURL)\n      .then((response) => response.json())\n      .then((data) => {\n        // Hay queponer el índice cero [0] siempre, porque la URL de randon solo devuelve un valor, el de la posición cero [0].\n        cocktails.push(data.drinks[0]);\n\n        if (cocktails.length === randonIni) {\n          paintFun(cocktails, 0);\n          console.log('LANZA PAINFUN ---> ');\n        }\n      });\n\n    // Llamo a la función que pinta las tarjetas.\n  }\n}\n\n//\n// Funciones manejadoras:\n//\n\n//\n// Crea la URL de búsqueda para la llamada a la API, con el valor del input.\n//\nfunction handleClickSearch(event) {\n  console.log('Entra en handleClickSearch');\n  event.preventDefault();\n\n  // Creo una variable y en ella meto el valor del input de búsqueda.\n  let inputSearchValue = '';\n  inputSearchValue = inputSearch.value;\n\n  callApiUrl = searchURL + inputSearchValue;\n\n  // Si quiero meter otra URL tiene que llegar aquí ;)\n  // callApi('https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=Alcoholic');\n  callApi(callApiUrl);\n}\n\n//\n// Resetea la búsqueda.\n// Borra las listas de cócteles.\n// Borra la lista de favoritos de localStorage.\n// Pinta de nuevo los cócteles aleatorios.\n//\nfunction handleClickReset() {\n  cocktails = [];\n  cocktailsFavorites = [];\n  cocktailsDrinked = [];\n\n  setLocalStorage();\n  paintFun(cocktails, 0);\n  paintFun(cocktailsFavorites, 1);\n  paintFun(cocktailsDrinked, 2);\n  getRandonCocktails();\n}\n\n//\n// EVENTOS.\n//\nbtnSearch.addEventListener('click', handleClickSearch);\nbtnReset.addEventListener('click', handleClickReset);\n\n// Realiza la búsqueda de los cócteles por nombre mientras se escribe.\ninputSearch.addEventListener('keyup', handleClickSearch);\n\n// Previene el comportamiento por defecto de la tecla \"Intro\".\ninputSearch.addEventListener('keypress', (e) => {\n  if (e.keyCode == 13) {\n    e.preventDefault();\n  }\n});\n\n//\n// AL CARGAR LA PÁGINA:\n//\ngetLocalStorage();\ngetRandonCocktails();\nlistenPredefinedList();\n"]}